#!/bin/bash
#
# List all branches that have been merged to master.

BRANCH="master"
test "$1" && BRANCH="$1"

# silencing the following two command so this script can
# easily be piped to git branch -d
git pull --all 2>&1 > /dev/null
git remote prune origin 2>&1 > /dev/null

git branch --all --merged $BRANCH | \
      grep -v "^\*" | \
      sed 's/remotes\/origin\///' | \
      uniq | \
      grep -v "develop\|master"

# I'm not building this in, but I might use the results of this
# script as follows for forcefully deleting the resulting branches.
#
# OF COURSE... doing this would be totally reckless and dangerous!
#
# for branch in $(git_merged.sh); do
#
#   # delete local branch forcefully
#   git branch -D $branch
#
#   # delete remote branch
#   git push origin :$branch
#
# done

